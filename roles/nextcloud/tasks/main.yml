---
#引入PHP运行环境元数据，并初始化

- include_vars: roles/role_php/vars/php_runtime_meta.yml

#Create var for this playbook
- set_fact:
    nextcloud_vhost_dir: "{{php_runtime_meta[ansible_os_family][nextcloud_webs].vhost_dir}}"
    nextcloud_vhost_src: "{{php_runtime_meta[ansible_os_family][nextcloud_webs].vhost_src}}"
    nextcloud_service: "{{php_runtime_meta[ansible_os_family][nextcloud_webs].service}}"
    nextcloud_owner: "{{php_runtime_meta[ansible_os_family][nextcloud_webs].owner}}"
    nextcloud_db_password: "{{mysql_root_password}}"

- debug:
    msg: runtime {{ nextcloud_vhost_dir }}, {{nextcloud_vhost_src}}, {{nextcloud_service}}, {{nextcloud_owner}}, {{nextcloud_webs}}, {{ansible_distribution}}

# NextCloud
- name: Remove extra dir
  shell: |
    rm -rf /data/wwwroot/*{{nextcloud_name}}*

- name: Download NextCloud
  shell: |
   cd /data/wwwroot
   wget {{nextcloud_download_url}} --no-check-certificate
   unzip latest.zip
#   unarchive:
#     src: "{{nextcloud_download_url}}"
#     dest: /data/wwwroot
#     remote_src: yes

- name: Rename dir name
  shell: cd /data/wwwroot; if [ ! -d "{{nextcloud_name}}" ]; then mv *{{nextcloud_name}}* {{nextcloud_name}}; fi

- name: Create the occ Helper Script
  template:
    src: occ
    dest: /usr/bin/occ
    mode: u+x,g+x,o+x
 
- name: Change directory ownership and group ownership
  shell: chown -R {{nextcloud_owner}}:{{nextcloud_owner}} /data/wwwroot

- name: Install NextCloud (Automaticall generate configuration files)
  shell: |
    occ maintenance:install \
    --database "mysql" \
    --database-name "{{nextcloud_db_name}}" \
    --database-user "{{nextcloud_db_user}}" \
    --database-pass "{{nextcloud_db_password}}" \
    --admin-user "{{nextcloud_admin_user}}" \
    --admin-pass "{{nextcloud_admin_password}}"

- name: Configure public_ip as NextCloud Domains 
  shell: |
    public_ip=`wget -O - https://download.websoft9.com/ansible/get_ip.sh | bash`
    occ config:system:set trusted_domains 1 --value="$public_ip"

- name: Configure Caching and File Locking
  shell: |
    occ config:system:set \
    memcache.local \
    --value '\OC\Memcache\Redis'
    occ config:system:set \
    memcache.locking \
    --value '\OC\Memcache\Redis'
    occ config:system:set \
    redis host\
    --value='127.0.0.1'
    occ config:system:set \
    redis port\
    --value=6379

- name: Set Up a NextCloud cron Job 
  cron:
    name: "Nextcloud cron"
    minute: "*/5"
    hour: "*"
    day: "*"
    month: "*"
    weekday: "*"
    user: "{{nextcloud_owner}}"
    job: "php -f /data/wwwroot/nextcloud/cron.php"

# 系统通用

- name: Permission directory
  shell: |
    find /data/wwwroot -type d -exec chmod 750 {} \;
    find /data/wwwroot -not -type d -exec chmod 640 {} \;

# 根据不同的基础环境分别处理

- block:
  - name: change owner&group
    shell: chown -R {{nextcloud_owner}}:{{nextcloud_owner}} /data/wwwroot
    
  - name: restart Apache or Nginx
    service: name={{nextcloud_service}} state=restarted enabled=yes

  - name: restart php-fpm
    service: name=php-fpm state=restarted

- name: Check nextcloud version
  shell: >
    sudo echo "nextcloud version:" $(cat /data/wwwroot/nextcloud/version.php |grep OC_VersionString |awk -F "'" '{print $2}') |sudo tee -a /data/logs/install_version.txt 
